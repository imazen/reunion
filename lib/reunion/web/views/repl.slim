
h3 Rule eval


textarea#repl rows="10" cols="150"
  = query

div#errors

table.table.table-condensed#results
  tr
    - schema.field_names_tagged(:repl).each do |name|
      th
        = name

javascript:

  $(function(){
    var oldVal = "";
    errorsDiv = $('#errors');
    resultsTable = $('#results');
    replText = $('#repl')

    editable_fields = #{{schema.fields.map{|k,v| v.readonly ? nil : k}.compact.to_json}};

    display_fields = #{{schema.field_names_tagged(:repl).to_json}};

    var fetchResults = function(text){
      $.post("/repl",{ruby: text},"json").done(function(data){
        //data = JSON.parse(data);
        errorsDiv.empty();
        resultsTable.empty();
        var header = $('<tr />');
        display_fields.forEach(function(value){
          header.append($("<th/>").text(value));
        });
        resultsTable.append(header);

        if (data.errors){
          errorsDiv.append(data.errors);
        }else{
          errorsDiv.append("Success: Found " + data.results.length)
        }
        if (data.results){
          $.each(data.results, function(ix, row){
            var r = $('<tr/>');
            display_fields.forEach(function(name){
              if (editable_fields.indexOf(name) > -1){
                var igroup = $("<div class='overrides_input_system form-group'/>");
                var input = $("<input type='text'/>").addClass("form-control").val(row[name]).data('id', row["loookup_key"]).data('key', name);
                igroup.append(input);
                igroup.append("<span class='glyphicon'/>");
                igroup.append("<span class='warning message override_message'/>")
                r.append($("<td/>").append(igroup));
              }else{
                r.append($("<td/>").text(row[name]));
              }
            });
            resultsTable.append(r);
          });

        }
      });
    };

    var update = function() {
        var currentVal = replText.val();
        if(currentVal == oldVal) {
            return; //check to prevent multiple simultaneous triggers
        }
        oldVal = currentVal;

        fetchResults(currentVal);
    };

    replText.on("change keyup paste", update);
    if (replText.val()){
      update();
    }
  });
